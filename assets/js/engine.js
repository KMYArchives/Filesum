"use strict";var Base64={encode:function(){El.value("#md4-hash",JSON.parse(Storage.get("md4-hash")).base64),El.value("#md5-hash",JSON.parse(Storage.get("md5-hash")).base64),El.value("#sha1-hash",JSON.parse(Storage.get("sha1-hash")).base64),El.value("#sha224-hash",JSON.parse(Storage.get("sha224-hash")).base64),El.value("#sha256-hash",JSON.parse(Storage.get("sha256-hash")).base64),El.value("#sha384-hash",JSON.parse(Storage.get("sha384-hash")).base64),El.value("#sha512-hash",JSON.parse(Storage.get("sha512-hash")).base64)},decode:function(){El.value("#md4-hash",JSON.parse(Storage.get("md4-hash")).hex),El.value("#md5-hash",JSON.parse(Storage.get("md5-hash")).hex),El.value("#sha1-hash",JSON.parse(Storage.get("sha1-hash")).hex),El.value("#sha224-hash",JSON.parse(Storage.get("sha224-hash")).hex),El.value("#sha256-hash",JSON.parse(Storage.get("sha256-hash")).hex),El.value("#sha384-hash",JSON.parse(Storage.get("sha384-hash")).hex),El.value("#sha512-hash",JSON.parse(Storage.get("sha512-hash")).hex)}},Hashes={compare:function(){""!=El.value(".hash-input")&&""!=El.value(".compare-input")&&(El.show(".message"),El.value(".hash-input")==El.value(".compare-input")?El.text(".message","The hashes are matched"):El.text(".message","The hashes are not matched"))},core:function(t,h){return new Promise(function(t,a){var e=crypt.createHash(h),s=fs.createReadStream(JSON.parse(Storage.get("current-file")).path);s.on("error",a),s.on("data",function(t){e.update(t)}),s.on("close",function(){t(e.digest("hex"))})})},md4:function(t){Hashes.core(t.path,"md4").then(function(t){El.append(".hash","\n\t\t\t\t<option value='".concat(t,"'>\n\t\t\t\t\tMD 4\n\t\t\t\t</option>\n\t\t\t"))})},md5:function(t){Hashes.core(t.path,"md5").then(function(t){El.append(".hash","\n\t\t\t\t<option value='".concat(t,"'>\n\t\t\t\t\tMD 5\n\t\t\t\t</option>\n\t\t\t"))})},sha1:function(t){Hashes.core(t.path,"sha1").then(function(t){El.append(".hash","\n\t\t\t\t<option value='".concat(t,"'>\n\t\t\t\t\tSHA 1\n\t\t\t\t</option>\n\t\t\t"))})},sha224:function(t){Hashes.core(t.path,"sha224").then(function(t){El.append(".hash","\n\t\t\t\t<option value='".concat(t,"'>\n\t\t\t\t\tSHA 224\n\t\t\t\t</option>\n\t\t\t"))})},sha256:function(t){Hashes.core(t.path,"sha256").then(function(t){El.append(".hash","\n\t\t\t\t<option value='".concat(t,"'>\n\t\t\t\t\tSHA 256\n\t\t\t\t</option>\n\t\t\t"))})},sha384:function(t){Hashes.core(t.path,"sha384").then(function(t){El.append(".hash","\n\t\t\t\t<option value='".concat(t,"'>\n\t\t\t\t\tSHA 384\n\t\t\t\t</option>\n\t\t\t"))})},sha512:function(t){Hashes.core(t.path,"sha512").then(function(t){El.append(".hash","\n\t\t\t\t<option value='".concat(t,"'>\n\t\t\t\t\tSHA 512\n\t\t\t\t</option>\n\t\t\t"))})},all_basic_hashes:function(t){this.md4(t),this.md5(t),this.sha1(t),this.sha224(t),this.sha256(t),this.sha384(t),this.sha512(t)}},Layout={hash_compare:function(){El.empty(".content"),El.append(".content",'\n\t\t\t<div class="label">Select a hash</div>\n\t\t\t<select class="hash"></select>\n\t\n\t\t\t<div class="label">Hash</div>\n\t\t\t<input type="text" placeholder="Hash..." class="hash-input" readonly>\n\t\n\t\t\t<div class="label">Hash to compare</div>\n\t\t\t<input type="text" placeholder="Hash to compare..." class="compare-input">\n\t\n\t\t\t<button onclick="Hashes.compare()">Compare</button>\n\t\t\t<div class="message">Message</div>\n\t\t')}},OpenFile={open:function(){El.empty("select"),El.empty("#filename"),El.value(".hash-input",""),El.append("select","\n\t\t\t<option value=''>\n\t\t\t\tSelect a hash\n\t\t\t</option>\n\t\t"),selectFiles().then(function(t){_.forEach(t,function(t){Storage.set("current-file",JSON.stringify({name:t.name,path:t.path,type:t.type,size:t.size,lastModified:t.lastModifiedDate})),Hashes.all_basic_hashes(t),El.text("#filename",Str.cut(t.name,30)),Attr.set("#filename","title","".concat(t.name," (").concat(Format.bytes(t.size),")"))})})},name:function(){return JSON.parse(Storage.get("current-file")).name}};